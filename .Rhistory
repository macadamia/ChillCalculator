THEURL <- "http://apsrunet.apsim.info/cgi-bin/getData.met?format=apsim&station="
saveRDS(THEURL,file='Date/extraInfo.rds')
saveRDS(THEURL,file='Data/extraInfo.rds')
extraInfo <- readRDS('Data/extraInfo.rds')
siteInfo <- readRDS('Data/SiteInfo.rds')
source('~/GitHub/ChillCalculator/helper.R')
shiny::runApp()
YLAB='Chill Units'
runApp()
source('~/GitHub/ChillCalculator/helper.R')
runApp()
eJDay<- 366 #as.numeric(format(as.Date(paste('31-08',YEAR,sep='-'),'%d-%m-%Y'),'%j'))
runApp()
source('~/GitHub/ChillCalculator/helper.R')
runApp()
if(CHILLTYPE != 3){
source('~/GitHub/ChillCalculator/helper.R')
runApp()
source('~/GitHub/ChillCalculator/helper.R')
runApp()
source('~/GitHub/ChillCalculator/helper.R')
runApp()
Sys.Date()
Sys.Date()-1
runApp()
source('~/GitHub/ChillCalculator/helper.R')
runApp()
source('~/GitHub/ChillCalculator/helper.R')
runApp()
source('~/GitHub/ChillCalculator/helper.R')
runApp()
source('~/GitHub/ChillCalculator/helper.R')
runApp()
source('~/GitHub/ChillCalculator/helper.R')
runApp()
source('~/GitHub/ChillCalculator/helper.R')
runApp()
source('~/GitHub/ChillCalculator/helper.R')
runApp()
source('~/GitHub/ChillCalculator/helper.R')
shiny::runApp()
source('~/GitHub/ChillCalculator/helper.R')
runApp()
source('~/GitHub/ChillCalculator/helper.R')
runApp()
as.numeric(format(Sys.Date(),'%Y'))
source('~/GitHub/ChillCalculator/helper.R')
runApp()
source('~/GitHub/ChillCalculator/helper.R')
runApp()
source('~/GitHub/ChillCalculator/helper.R')
runApp()
source('~/GitHub/ChillCalculator/helper.R')
runApp()
?text
source('~/GitHub/ChillCalculator/helper.R')
runApp()
source('~/GitHub/ChillCalculator/helper.R')
runApp()
source('~/GitHub/ChillCalculator/helper.R')
runApp()
source('~/GitHub/ChillCalculator/helper.R')
runApp()
source('~/GitHub/ChillCalculator/helper.R')
runApp()
source('~/GitHub/ChillCalculator/helper.R')
runApp()
source('~/GitHub/ChillCalculator/helper.R')
runApp()
source('~/GitHub/ChillCalculator/helper.R')
runApp()
source('~/GitHub/ChillCalculator/helper.R')
runApp()
source('~/GitHub/ChillCalculator/helper.R')
runApp()
load("~/GitHub/ChillCalculator/Data/41175.RData")
source('~/GitHub/ChillCalculator/helper.R')
shiny::runApp()
source('~/GitHub/ChillCalculator/helper.R')
runApp()
source('~/GitHub/ChillCalculator/helper.R')
runApp()
source('~/GitHub/ChillCalculator/helper.R')
runApp()
source('~/GitHub/ChillCalculator/helper.R')
runApp()
source('~/GitHub/ChillCalculator/helper.R')
runApp()
source('~/GitHub/ChillCalculator/helper.R')
runApp()
source('~/GitHub/ChillCalculator/helper.R')
runApp()
source('~/GitHub/ChillCalculator/helper.R')
runApp()
shiny::runApp()
if (interactive()) {
options(device.ask.default = FALSE)
# Server code used for all examples
server <- function(input, output) {
output$plot1 <- renderPlot(plot(cars))
output$plot2 <- renderPlot(plot(pressure))
output$plot3 <- renderPlot(plot(AirPassengers))
}
# Equal sizing
ui <- splitLayout(
plotOutput("plot1"),
plotOutput("plot2")
)
shinyApp(ui, server)
# Custom widths
ui <- splitLayout(cellWidths = c("25%", "75%"),
plotOutput("plot1"),
plotOutput("plot2")
)
shinyApp(ui, server)
# All cells at 300 pixels wide, with cell padding
# and a border around everything
ui <- splitLayout(
style = "border: 1px solid silver;",
cellWidths = 300,
cellArgs = list(style = "padding: 6px"),
plotOutput("plot1"),
plotOutput("plot2"),
plotOutput("plot3")
)
shinyApp(ui, server)
}
runApp()
ui <- fluidPage(
fluidRow(
column(width = 4,
"4"
),
column(width = 3, offset = 2,
"3 offset 2"
)
shinyApp(ui, server = function(input, output) { })
runApp()
source('~/GitHub/ChillCalculator/yearSelectionUI.R')
runApp()
source('~/GitHub/ChillCalculator/yearSelectionUI.R')
runApp()
source('~/GitHub/ChillCalculator/helper.R')
runApp()
source('~/GitHub/ChillCalculator/helper.R')
runApp()
source('~/GitHub/ChillCalculator/helper.R')
runApp()
source('~/GitHub/ChillCalculator/helper.R')
runApp()
source('~/GitHub/ChillCalculator/helper.R')
runApp()
source('~/GitHub/ChillCalculator/helper.R')
runApp()
source('~/GitHub/ChillCalculator/helper.R')
runApp()
Sys.Date()+1
checkDate <- function(aDate){
if(as.Date(aDate) < Sys.Date() ){
return(aDate)
} else {
return(paste(strsplit(aDate,'-')[[1]][1],'-01-01',sep=''))
}
checkDate(paste(2017,"-05-01",sep=''))
runApp()
source('~/GitHub/ChillCalculator/helper.R')
runApp()
siteInfo <- readRDS('Data/SiteInfo.rds')
siteInfo[247,]
shiny::runApp()
source('~/GitHub/ChillCalculator/helper.R')
shiny::runApp()
source('~/Dropbox/CodeBits/R/APSRU-SILO/GetGoodTemperatureStations.R')
runApp()
source('~/Dropbox/CodeBits/R/APSRU-SILO/GetGoodTemperatureStations.R')
runApp()
shiny::runApp()
runApp()
load("~/GitHub/ChillCalculator/Data/33247.RData")
GDDCold
paste('Growing Degree Days (base =',GDDb,')',sep='')
expression
YLAB <- expression( paste('Growing Degree Days (base = ',GDDb,degree,'C)',sep=''))
YLAB
source('~/GitHub/ChillCalculator/helper.R')
runApp()
source('~/GitHub/ChillCalculator/helper.R')
runApp()
source('~/GitHub/ChillCalculator/helper.R')
runApp()
source('~/GitHub/ChillCalculator/helper.R')
runApp()
source('~/GitHub/ChillCalculator/helper.R')
runApp()
source('~/GitHub/ChillCalculator/helper.R')
runApp()
source('~/GitHub/ChillCalculator/helper.R')
YLAB<-expression(paste("Growing Degree Days ( base = ",GDDb,degree,"C)"))
source('~/GitHub/ChillCalculator/helper.R')
runApp()
eval(GDDb)
source('~/GitHub/ChillCalculator/helper.R')
runApp()
source('~/GitHub/ChillCalculator/helper.R')
runApp()
source('~/GitHub/ChillCalculator/helper.R')
runApp()
source('~/GitHub/ChillCalculator/helper.R')
runApp()
source('~/GitHub/ChillCalculator/helper.R')
runApp()
source('~/GitHub/ChillCalculator/helper.R')
runApp()
stn
View(siteInfo)
runApp()
source('~/GitHub/ChillCalculator/helper.R')
runApp()
source('~/GitHub/ChillCalculator/helper.R')
runApp()
source('~/GitHub/ChillCalculator/helper.R')
runApp()
source('~/GitHub/ChillCalculator/helper.R')
runApp()
source('~/GitHub/ChillCalculator/helper.R')
runApp()
source('~/GitHub/ChillCalculator/helper.R')
runApp()
source('~/GitHub/ChillCalculator/helper.R')
runApp()
source('~/GitHub/ChillCalculator/helper.R')
runApp()
source('~/GitHub/ChillCalculator/helper.R')
runApp()
source('~/GitHub/ChillCalculator/helper.R')
runApp()
seq(currentYear,1968,-1))
seq(currentYear,1968,-1)
currentYear <- as.numeric(format(Sys.Date(), "%Y"))
runApp()
?column
runApp()
Sys.Date()-1
"2016" < "2017"
as.numeric(format(Sys.Date(),'%Y'))
runApp()
Sys.Date()-1
checkDateEnd <- function(aDate){
aYear <- as.numeric(strsplit(aDate,'-')[[1]][1])
thisYear <- as.numeric(format(Sys.Date(),'%Y'))
if(aYear == thisYear){
return(Sys.Date()-1)
} else {
return(paste(strsplit(aDate,'-')[[1]][1],'-12-31',sep=''))
}
checkDateEnd(Sys.Date()-1)
aDate <- Sys.Date()-1
aDate
strsplit(aDate,'-')
runApp()
source('~/GitHub/ChillCalculator/helper.R')
runApp()
source('~/GitHub/ChillCalculator/helper.R')
runApp()
checkDateEnd <- function(aDate){
aYear <- as.numeric(strsplit(aDate,'-')[[1]][1])
thisYear <- as.numeric(format(Sys.Date(),'%Y'))
if(aYear == thisYear){
return(Sys.Date()-1)
} else {
return(paste(strsplit(aDate,'-')[[1]][1],'-12-31',sep=''))
}
checkDateEnd(as.character(Sys.Date()-1))
paste(input$yearInput,"-01-01",sep='')
runApp()
